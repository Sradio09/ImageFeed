import Foundation
import SwiftKeychainWrapper

final class OAuth2TokenStorage {
    static let shared = OAuth2TokenStorage()
    private init() {}
    
    private let tokenKey = "bearerToken"
    
    var token: String? {
        get {
            let token = KeychainWrapper.standard.string(forKey: tokenKey)
            print("üì§ OAuth2TokenStorage - –ø–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∏–∑ Keychain: \(token ?? "nil")")
            return token
        }
        set {
            if let token = newValue {
                let isSuccess = KeychainWrapper.standard.set(token, forKey: tokenKey)
                print("üíæ OAuth2TokenStorage - —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ Keychain: \(token), —É—Å–ø–µ—Ö: \(isSuccess)")
            } else {
                let isSuccess = KeychainWrapper.standard.removeObject(forKey: tokenKey)
                print("üóë OAuth2TokenStorage - —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ Keychain, —É—Å–ø–µ—Ö: \(isSuccess)")
            }
        }    }
}

